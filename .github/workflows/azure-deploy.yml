name: Deploy to Azure App Service

on:
  push:
    branches:
      - main  # Set a branch name to trigger deployment
      - new-main  # Also trigger deployment from new-main branch
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          # Temporarily disable npm cache to avoid initial setup issues
          # cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Create production env file
        run: |
          cat > .env.production << EOL
          # Production environment variables for Azure
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          NODE_ENV=production
          NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
          PORT=8080
          ${{ secrets.ADDITIONAL_ENV_VARS }}
          EOL

      - name: Run Prisma generate
        run: npx prisma generate
        
      - name: Build for Azure
        run: npm run build:azure
        env:
          NODE_ENV: production
      
      - name: Azure Post-Build Tasks
        run: |
          echo "Running Azure post-build tasks..."
          # Check if .next directory exists
          if [ ! -d ".next" ]; then
            echo "Error: .next directory does not exist. Build may have failed."
            exit 1
          fi
          
          # Check if standalone directory exists, create if not
          if [ ! -d ".next/standalone" ]; then
            echo "Creating missing standalone directory..."
            mkdir -p .next/standalone
          fi
          
          # Ensure server.js is included in the deployment
          cp server.js .next/standalone/
          # Copy Azure-specific configuration
          cp next.config.azure.js .next/standalone/
          # Copy web.config for IIS
          cp web.config .next/standalone/
          # Copy public assets
          cp -r public .next/standalone/
          
          # Create .next directory inside standalone if it doesn't exist
          mkdir -p .next/standalone/.next
          
          # Copy static assets if they exist
          if [ -d ".next/static" ]; then
            cp -r .next/static .next/standalone/.next/
          else
            echo "Warning: .next/static directory not found."
          fi

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_APP_NAME }}
          resource-group-name: ${{ secrets.AZURE_RESOURCE_GROUP }}
          package: .next/standalone