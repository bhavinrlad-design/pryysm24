name: Deploy to Azure App Service

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Create production env file
        run: |
          echo "Creating .env.production file..."
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env.production
          echo "NODE_ENV=production" >> .env.production
          echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" >> .env.production
          echo "PORT=8080" >> .env.production
          # Add any other build-time secrets if necessary

      - name: Run Prisma generate
        run: npx prisma generate
        
      - name: Build Next.js application
        run: |
          npm run build
        env:
          NODE_ENV: production
      
      - name: Prepare package for deployment
        run: |
          echo "Preparing deployment package..."
          # The standalone output is the recommended way to deploy Next.js.
          # Ensure your next.config.js has `output: 'standalone'`.
          if [ ! -d ".next/standalone" ]; then
            echo "Error: .next/standalone directory not found. Build may have failed."
            exit 1
          fi
          
          # Copy custom server files into the standalone directory.
          if [ -f "server-parent.js" ]; then
            cp server-parent.js .next/standalone/
          fi
          if [ -f "server-child.js" ]; then
            cp server-child.js .next/standalone/
          fi

          # Copy web.config for IISNode on Windows App Service.
          if [ -f "web.config" ]; then
            cp web.config .next/standalone/
          fi
          
          # Copy prisma schema for standalone output
          if [ -d "prisma" ]; then
            echo "Copying prisma directory..."
            cp -r prisma .next/standalone/
          fi

          # Copy public assets.
          if [ -d "public" ]; then
            echo "Copying public directory..."
            cp -r public .next/standalone/
          fi
          
          # Copy static assets generated by the build.
          if [ -d ".next/static" ]; then
            mkdir -p .next/standalone/.next
            cp -r .next/static .next/standalone/.next/
          else
            echo "Warning: .next/static directory not found."
          fi

      - name: Azure Login with Service Principal
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} # Ensure this secret contains the JSON from `az ad sp create-for-rbac`
           
      - name: Deploy to Azure App Service
        id: deploy-to-azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_APP_NAME }}
          slot-name: 'production'
          package: .next/standalone